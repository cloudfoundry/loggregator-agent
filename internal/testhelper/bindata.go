// Code generated by go-bindata.
// sources:
// test-certs/doppler.crt
// test-certs/doppler.csr
// test-certs/doppler.key
// test-certs/loggregator-ca.crl
// test-certs/loggregator-ca.crt
// test-certs/loggregator-ca.key
// test-certs/metron.crt
// test-certs/metron.csr
// test-certs/metron.key
// test-certs/prom-scraper.crt
// test-certs/prom-scraper.csr
// test-certs/prom-scraper.key
// test-certs/router.crt
// test-certs/router.csr
// test-certs/router.key
// DO NOT EDIT!

package testhelper

import (
	"fmt"
	"io/ioutil"
	"os"
	"path/filepath"
	"strings"
	"time"
)

type asset struct {
	bytes []byte
	info  os.FileInfo
}

type bindataFileInfo struct {
	name    string
	size    int64
	mode    os.FileMode
	modTime time.Time
}

func (fi bindataFileInfo) Name() string {
	return fi.name
}
func (fi bindataFileInfo) Size() int64 {
	return fi.size
}
func (fi bindataFileInfo) Mode() os.FileMode {
	return fi.mode
}
func (fi bindataFileInfo) ModTime() time.Time {
	return fi.modTime
}
func (fi bindataFileInfo) IsDir() bool {
	return false
}
func (fi bindataFileInfo) Sys() interface{} {
	return nil
}

var _dopplerCrt = []byte(`-----BEGIN CERTIFICATE-----
MIIEJTCCAg2gAwIBAgIQP+zfxobpaU1Lt2qbiknkPjANBgkqhkiG9w0BAQsFADAY
MRYwFAYDVQQDEw1sb2dncmVnYXRvckNBMB4XDTE4MDkyNzE2NTI0NFoXDTQzMDky
NzE2NTI0MFowEjEQMA4GA1UEAxMHZG9wcGxlcjCCASIwDQYJKoZIhvcNAQEBBQAD
ggEPADCCAQoCggEBALVT+e1CGqQjhTG08xYuL6OqGr+YR3sbWUHe+p+Mz8LflJc0
PQsXHKEDz1bZ5bBDx/8qFOJ1xvLFQqvY7xuwGAOQWStQZFqKQgALHSiuG2X+dpoJ
Xm5Jw6L0fPRkpx/7yqg2pYu5CP2ccdvOSwFVa9wuSn8gECVYHmdxPofv5/UqNRaa
Ovxi382e7RDULfwRKif3OxG2/tl2FMKchwK5LUsCtvqb3ERgnmnywJkhoY2rqZzT
5OPIWssf/MzJEURXUHa5WIMdICs8B8Y4d0UaVqbDU6pMqEQTfV9a5RmD4GzALgFZ
TvDWMLVfPSeT6wsASL5vKg3FBAvIx+aZOwHsjhMCAwEAAaNxMG8wDgYDVR0PAQH/
BAQDAgO4MB0GA1UdJQQWMBQGCCsGAQUFBwMBBggrBgEFBQcDAjAdBgNVHQ4EFgQU
1MZspSaDfXy9uU6IjxSe6SVaKTswHwYDVR0jBBgwFoAUYFk2zSKZ53lAEIe+I7Jw
/7a32dIwDQYJKoZIhvcNAQELBQADggIBALLDGzJTz9dF3CbhZG4Djpcx84q3PqgB
OSvU/0UVRmkltcbZ+CBh3fUjREw4OTrwt/Cb6bNemoNUFYHASU3YNfr8iCdav1ye
sj3ug5ybyTMjSPMSQTfMpSHKPRaMfAsIkogKp5moNx0kIzmXbXjHhi9HBME50Lf9
tqfETAPBGJPuj5UsAcig5/neFvSfysl1CkIGgoeXVGuYEMMqRvzrFiQpFWy9MfuT
sZOuG+P7VeHUeNRv60ACNqT1WWZAWIqTwVzyS4D92pNjssLAodG5XP+38HSvJiIz
l+7z7It3Rw32FmHPbI9gG2sD6CijotEAmt3vwKaHzPNR+MvxOuYTq2AdcZ39SXfC
F/n0w7XsnLrAwz+kM4kSjL8P4CmhcWipBBHUIIR6LeEhyBHTjFw+01QEI0LtLIMd
MWlLfEz5Bb1YuTWqRLnt0ySqmF2wjAIlvHur0zkEqyUNV14v53T/iXpDB/4y4HyZ
+38yb5HnY4trxCeRWRWAfEYmPA4rnerB2SiUbG+0V/6M4sr1ztMBQwov9zPa9jEE
xeNozUnT9jly/tyd5+tSIL2OkSjYdDfI8HxYuRgvJIv6Y/SBtfsxY5er6dI7a8Ac
QC9z2uV1YbNmJBw5mgqLuEzFLXLz6fUnTZjlxutzu2tSRS9pIKWhDZt/ZTeyQOua
RxZI+IMyPVxb
-----END CERTIFICATE-----
`)

func dopplerCrtBytes() ([]byte, error) {
	return _dopplerCrt, nil
}

func dopplerCrt() (*asset, error) {
	bytes, err := dopplerCrtBytes()
	if err != nil {
		return nil, err
	}

	info := bindataFileInfo{name: "doppler.crt", size: 1497, mode: os.FileMode(292), modTime: time.Unix(1538067164, 0)}
	a := &asset{bytes: bytes, info: info}
	return a, nil
}

var _dopplerCsr = []byte(`-----BEGIN CERTIFICATE REQUEST-----
MIICVzCCAT8CAQAwEjEQMA4GA1UEAxMHZG9wcGxlcjCCASIwDQYJKoZIhvcNAQEB
BQADggEPADCCAQoCggEBALVT+e1CGqQjhTG08xYuL6OqGr+YR3sbWUHe+p+Mz8Lf
lJc0PQsXHKEDz1bZ5bBDx/8qFOJ1xvLFQqvY7xuwGAOQWStQZFqKQgALHSiuG2X+
dpoJXm5Jw6L0fPRkpx/7yqg2pYu5CP2ccdvOSwFVa9wuSn8gECVYHmdxPofv5/Uq
NRaaOvxi382e7RDULfwRKif3OxG2/tl2FMKchwK5LUsCtvqb3ERgnmnywJkhoY2r
qZzT5OPIWssf/MzJEURXUHa5WIMdICs8B8Y4d0UaVqbDU6pMqEQTfV9a5RmD4GzA
LgFZTvDWMLVfPSeT6wsASL5vKg3FBAvIx+aZOwHsjhMCAwEAAaAAMA0GCSqGSIb3
DQEBCwUAA4IBAQBQVcdK8l99+1fCP072II5Ff4nLkUDuzn5sCVzme64cRPAtRl66
IJGADMCF4BR60zEvhQB7gIXggOY/mDoLD9EPzmhEWnrBH0whK1otPNM5MeeCgdji
rKjiuNgCjKPgmI16RcWfWa7OLRV5h6WU/3uA11F6kuBfULG2lWGTyQ+Wy4DVMvIe
EF2oHT1aZXW9zAA7k2p012X/wb86WTu+2nS5LBFHVF3ONgl4E+lRGzBKnPJgMoyR
SkHrOf3Yx6+JpCWRIHZh5CQcGt3rNb/w3wNg3uE/ng3uar3usVkUQb+r5WyeDU5s
aQMLY2zTlFVYj6hQn2PQXl9ggCnCylC1dwOK
-----END CERTIFICATE REQUEST-----
`)

func dopplerCsrBytes() ([]byte, error) {
	return _dopplerCsr, nil
}

func dopplerCsr() (*asset, error) {
	bytes, err := dopplerCsrBytes()
	if err != nil {
		return nil, err
	}

	info := bindataFileInfo{name: "doppler.csr", size: 887, mode: os.FileMode(292), modTime: time.Unix(1538067164, 0)}
	a := &asset{bytes: bytes, info: info}
	return a, nil
}

var _dopplerKey = []byte(`-----BEGIN RSA PRIVATE KEY-----
MIIEpAIBAAKCAQEAtVP57UIapCOFMbTzFi4vo6oav5hHextZQd76n4zPwt+UlzQ9
CxccoQPPVtnlsEPH/yoU4nXG8sVCq9jvG7AYA5BZK1BkWopCAAsdKK4bZf52mgle
bknDovR89GSnH/vKqDali7kI/Zxx285LAVVr3C5KfyAQJVgeZ3E+h+/n9So1Fpo6
/GLfzZ7tENQt/BEqJ/c7Ebb+2XYUwpyHArktSwK2+pvcRGCeafLAmSGhjaupnNPk
48hayx/8zMkRRFdQdrlYgx0gKzwHxjh3RRpWpsNTqkyoRBN9X1rlGYPgbMAuAVlO
8NYwtV89J5PrCwBIvm8qDcUEC8jH5pk7AeyOEwIDAQABAoIBAF6ZjCdSuHFvspqH
K9cji2kYYtIYURqR3xQ1j41TukSRvoTQFRTHHwGF6lMGZQV7p0ihHLo09fFMJodf
KwfH7A9X7J1jWKe/v8UkBzdk9hhVFG0yfBiP1Ugbw2EBbguKomT19ZIam+0sBF7H
lmwAs7/wSp9eC+5ftaUD+LqU1/AYDu5S5V2GfL3+UVsyyfYUtt6epIGE5ct+qdDu
j7sBjzjgwpDmX6fJr+79Emm7wbGJSUy/uB0JotoQ1YuyENo6j5Q/tMQrO1MDn3xj
iISELhaXRjmyxovHFFfB9nVgwBG6zyQiWUhEqw8WSt0EVm5ldbU+TLfR0IW/qzGh
aq2UyhECgYEAzDMdnamrQu6HfRNyyHWsq3Q+d35uf0pahmUd+SjirnouZKnNU2hM
4nUvaEJupWJeuTDdfpA3VD3QsCSUz9PZQGSlCRMByZignroNQetHjw+i+TMdhZm6
f8c/z8DS4U04UScHKOWB84a7uhmUwRNzwdnVAXtAbKjPpGSRy3mRWhkCgYEA41OP
CSccrM70s3Y/Zx7pjZHFLz4BubmtYomMDmth3uXLSdmZ4wspl4SBU3sYCeI/Ijox
pe0BtBxq99Ycqpbt7Nvp6MmLD4u77JXQ60z0chvlmBJaGn4ZpY8iN5sj2069R0dH
18gnJdDk+1BuNJncS99WqQoWQVSNFtRguj3PBwsCgYEAphsiiUEepmigYFc0tOo8
VpBNzChVvEgAkXipxCfFFccf/BTAiIu8ly5aLQZ1OSVnBmBAnRa1W1qZat+nCdQ7
0ozMTzBd8N6uMdAIvsmkQTSoDuzMpAQkWJL9ToN9R3boS+NiiJsBddbw2Ha8sb6g
GF2ZTwYypvE/T2vbyVgPq+kCgYBVmLACLUUB2MeRD5ReGuisUtghqsJxkXW05b/j
6hEnIfXC7/me4SQfFliv+2iYyCUnmSv6o1yB2jV47plKrpwWFNRlwAXpq57uPZc2
Enr0wIZaFYbx9MtpaJTkxTjiKirhPPjTSl1bQuYFr0pf6hNmSklSSycIIHMjxoJJ
fl6G8wKBgQCTQHCDbdYMeUZdvy9J3xdzS+oo8WJSdK/O1xBConQo3dcEPivfMXZg
QMfhuHd3aqMqy3GBpnUcn0WU2X1OpO47Q/t/BZ6mYYn+d5K6dpj31ZQx89M6OiVX
sMRTOxRUZiXOJC540Gi1uIdJI6+z4Wf9GvN1ZMECsd6mezJ9CxI1oA==
-----END RSA PRIVATE KEY-----
`)

func dopplerKeyBytes() ([]byte, error) {
	return _dopplerKey, nil
}

func dopplerKey() (*asset, error) {
	bytes, err := dopplerKeyBytes()
	if err != nil {
		return nil, err
	}

	info := bindataFileInfo{name: "doppler.key", size: 1679, mode: os.FileMode(288), modTime: time.Unix(1538067164, 0)}
	a := &asset{bytes: bytes, info: info}
	return a, nil
}

var _loggregatorCaCrl = []byte(`-----BEGIN X509 CRL-----
MIIChzBxAgEBMA0GCSqGSIb3DQEBCwUAMBgxFjAUBgNVBAMTDWxvZ2dyZWdhdG9y
Q0EXDTE4MDkyNzE2NTI0M1oXDTQzMDkyNzE2NTI0MVowAKAjMCEwHwYDVR0jBBgw
FoAUYFk2zSKZ53lAEIe+I7Jw/7a32dIwDQYJKoZIhvcNAQELBQADggIBAHbHtC4U
2kiQnIe3Zrp3AJ0hdFuQAHzsgoKc7C6SF9eyt2cH1zrrvHspgqYpQ9KUDyx1sxEZ
N7vq9o4fqVy1jtq5G8KnBa4kji7pEScsNE40QnqgYPQ5qrTqQXjqs3ACeWJdFLvz
glIGzeHxv5LVn6yoDiT46NpTIvvAyfCRPuIRklQ7kqKu7C2J0mC4fvxQBSDlTI3i
uofKIJFgzRm2PWx9uIM3aMZgDlluS+zZ7g4UwEBfpOIpKKh0CKv+noghIOngWAfX
cxC5mSTo5x8KALVpNqL9MDi8jXEUGVUOVuaxB260kjz9eGrmUBMDKFk+9Hf/fg9l
/CI/LN11wbJjs8KZ0EtHFndORiCzsw+ofQiWU66idEBMSrL0RVgRJqNJ91ymVmfE
UN4uQNSgYiejlj1tYkMwq/Azst6+nvrmNTsG7r5wIE1KsevOTZS4ZaUK4V2tgl/k
3O31neI1kg/zJ9rmeyuSB9HflKCJMDbyToLUXxHLJ0FK/LGuq6qXXLAlBOg64VTD
8NXgHBidr4sW2ltnzeKSbfd3E1TAOwVrsPmwLoOE/7GVNfzLrsOgMv6UG3SU+Fvp
opbTwV0UXMZb5OB97+p4bB6Jyj4kQYCCpKIbXoiUCcTavUIL1Dq3NSGUKWHW27fs
jRbJABVphQK99/JffC5QzVsiixqnGejwSeWj
-----END X509 CRL-----
`)

func loggregatorCaCrlBytes() ([]byte, error) {
	return _loggregatorCaCrl, nil
}

func loggregatorCaCrl() (*asset, error) {
	bytes, err := loggregatorCaCrlBytes()
	if err != nil {
		return nil, err
	}

	info := bindataFileInfo{name: "loggregator-ca.crl", size: 930, mode: os.FileMode(292), modTime: time.Unix(1538067163, 0)}
	a := &asset{bytes: bytes, info: info}
	return a, nil
}

var _loggregatorCaCrt = []byte(`-----BEGIN CERTIFICATE-----
MIIE8DCCAtigAwIBAgIBATANBgkqhkiG9w0BAQsFADAYMRYwFAYDVQQDEw1sb2dn
cmVnYXRvckNBMB4XDTE4MDkyNzE2NTI0MVoXDTQzMDkyNzE2NTI0MVowGDEWMBQG
A1UEAxMNbG9nZ3JlZ2F0b3JDQTCCAiIwDQYJKoZIhvcNAQEBBQADggIPADCCAgoC
ggIBAMONGFgEdWh1LVTawFRcDNNWo4CzQaC0ukgoOuI+IfDIebSh27FPYRJD8fkz
zMhFj+HwPY/tMsho14Vw5mo0xXKcHiUl8gaQUU0mv/UAEAe4PkpESYbs46wea6Pv
d5jc+hlfIQ4/vjCz4Q0gT7CJP8Ab7Fy5cR9NPoZbe6Sdbz2U7na3cP/f+sm+HOoS
w8uBvD9tm98NoLAlnNSPqEcWvC9xs+rG/y29Qo3Wv4khInznhThyy5EA9MaUafUw
noR6rcSF+dQY2kagUTiYUqsBoafUg8395/fOP3a2EntP/vAbU4Coe0YRmDrb74lY
h5FPWS0dPLh2CJ1qsFJyYPUBI16vPTPJFvmBEauH+ZljfvhJDGpoZDQCNMGtXKHW
djgjyxccWWBofHRWfvvLIJzdmOAfBi6YENvYKfGGaRxk4epx32KUlpYpc9GXH9be
iGwjaqXBJOmg9m4wl5Xcrb6Vh03vmlhYv8ioEHdlR8PuyoY2CxPKS+rrgQBysPxP
UDexWI0E1xxl8ijyYmT8FfJEeJYFD8QowFciXYl6w1RyktddY3MmGmmYY65vYGAH
XNxBwU6WLNAn/C9wOLf3EJv+q7o2dxsei9+GmciZbTj8YihGXQarIim3zkqS/Nk5
g3IFjw4lyfBmeike+Ps7sd3bPzMaLFTYeKfBJmdgbxqE0JYvAgMBAAGjRTBDMA4G
A1UdDwEB/wQEAwIBBjASBgNVHRMBAf8ECDAGAQH/AgEAMB0GA1UdDgQWBBRgWTbN
IpnneUAQh74jsnD/trfZ0jANBgkqhkiG9w0BAQsFAAOCAgEABSmA3Qm0NoC63k1U
DifaRyDeCMLHYVMLOLRsR8GgwmzoaHelFaArBke32tLQfFpRl9z2K3EbSVTGtw9c
yWUyiZjf1iCW2Ufg+Y0dga07fQxyi68yCGDejejhojx8DDpIFU+2W3oSY4kJOr7q
ssPuT+Q/pxxfq0s4FBPpuutLFS5/bmhZ1tjfCDmFtrEsN7J1sw5rdDjSCSP7SVuF
bSfygbnuZh0G90pf4t19bu0degOpOkfzJdT4erB56cGtLxfeHnw2Mhko8eiDtCGy
kGnqbElmhkyPUkt/wjiiTgV8OaPz8z7aVoLPVbRkx9Ivoq9LOJmdrwZGYg08mDMC
knbTQ0E9sli+9R0VUEeo8Si/Adt2jx7T4DWkxLTMefsjefxWdKQwZ0SrVeO1Kapx
NiarUm+bOK95zpD72mfRskWAfpqFyrQqdZ5d6OC9oNaXGNF8o3+900ffsT+0HP6r
J0CJRTSzSdwD/DHw8S3GguFzcZpPap7uWQyIXiUgVNrz1jKD4EFCE3dJ0sM45RVY
Zgg10l9+NsYvDTyTEPFhiQwHMb5EmDePi2AFq2DwMeS9T2GHzM2ESRMzkjlPkrzg
epVbEWH9OzTilXOjLgAuJh+su3B2xZqy5urQNBvJSICXaQgyNArn2aYCs1Pss6NG
VQLLXbsmJLdZXictaQicp6opKvc=
-----END CERTIFICATE-----
`)

func loggregatorCaCrtBytes() ([]byte, error) {
	return _loggregatorCaCrt, nil
}

func loggregatorCaCrt() (*asset, error) {
	bytes, err := loggregatorCaCrtBytes()
	if err != nil {
		return nil, err
	}

	info := bindataFileInfo{name: "loggregator-ca.crt", size: 1773, mode: os.FileMode(292), modTime: time.Unix(1538067163, 0)}
	a := &asset{bytes: bytes, info: info}
	return a, nil
}

var _loggregatorCaKey = []byte(`-----BEGIN RSA PRIVATE KEY-----
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
-----END RSA PRIVATE KEY-----
`)

func loggregatorCaKeyBytes() ([]byte, error) {
	return _loggregatorCaKey, nil
}

func loggregatorCaKey() (*asset, error) {
	bytes, err := loggregatorCaKeyBytes()
	if err != nil {
		return nil, err
	}

	info := bindataFileInfo{name: "loggregator-ca.key", size: 3243, mode: os.FileMode(288), modTime: time.Unix(1538067163, 0)}
	a := &asset{bytes: bytes, info: info}
	return a, nil
}

var _metronCrt = []byte(`-----BEGIN CERTIFICATE-----
MIIEJTCCAg2gAwIBAgIRAM9q/81reTRTzURzHUH5ze0wDQYJKoZIhvcNAQELBQAw
GDEWMBQGA1UEAxMNbG9nZ3JlZ2F0b3JDQTAeFw0xODA5MjcxNjUyNDNaFw00MzA5
MjcxNjUyNDBaMBExDzANBgNVBAMTBm1ldHJvbjCCASIwDQYJKoZIhvcNAQEBBQAD
ggEPADCCAQoCggEBANAbbMH/JXsInrIJPln88uhC83efnbEbKKInW030LrHw32vc
GYhQ5rCuB3j2Duf7MdkyM29eu+MGLixXK3yvz6WALEdt5uw5ph941vgdmKPcOq47
ZgaYWwXSSUHEt8O2Rr1jf7kbGL4KoNKTfN+IqHPy6O+ngFOpy1n636v0n/6XffH2
gPA3VDaSgGh1oCQYBCQpzn1aNTQJbX6sGwNEswjj9KIdl5janZ2ZZKqgq2YAMmRi
baGSBcqpRPh9mj0iUlzunrXtZozNgbeGquvzvV2EX2l9uP1c1uFtk1wPyZAUJ9p2
Ekv+zII8tDqp9uKCYdEP8dowJU7K3Dm+MkPbCAMCAwEAAaNxMG8wDgYDVR0PAQH/
BAQDAgO4MB0GA1UdJQQWMBQGCCsGAQUFBwMBBggrBgEFBQcDAjAdBgNVHQ4EFgQU
opg1tQoQJAkl3LH9vEDjGzVwnf4wHwYDVR0jBBgwFoAUYFk2zSKZ53lAEIe+I7Jw
/7a32dIwDQYJKoZIhvcNAQELBQADggIBADgLbtjVsX+a0z7chaUZrnWbmOYjJWf6
LigCr4FTsuHlC/g3DBz49ytD/FpDSXSj/0jcNixKsa9c3qgG6XoY7os4o+rttKzV
dD99jSGOmJdlLKyoWErkPK0DX2HFxY01mcLj6AV0wmDQ5pvsPf5qPia5ov+6gzdC
rRUIFl4C0WS84XArsHHpN4c6/WskcNhbR49Y/L0UxODBvMfHjUcc7E/1SXKhf0qc
B5+MkNqayS8oVmo/FR+stghiakYEH1afhP0SgnMJ/FsWr0bBDXnVoK9bV6znLCTy
t3jDJ+dmNiTy/R9WjKEkMF4LaQ2gR+zfEPYy50HHuiowukXMHfypPq5d/6Vrfay9
LcZ0tHKK7A0X2NFxykERdN22C4exfN9s9IIE5uKyNOn3d4BuuPOFwRv9375KcdzU
dOsCZEUkbs2XrqgwF51woB0kZ2a6UtxKZcfvk/ZqQYk90Dyk4rsSKJnqaBuHl4Q4
sKjly2SJbhJo2oLOXCoN+2iQ7TON7GVCQ9ZlL2Uq0oJr0qgAtAgTbGTulnM16k+B
yLPaIUr0k2rg6Wcg+14to0IZCIvZyNnDT54xrKuI1hPzQ4py22Z/qPG1fs8Z2JmO
2/FVu9RpNXrfbcISo5Posz63mhizGSSj9aKiJiwFZvnj9qaMZYYlNgF4nrwLOxK0
WxSe+iYG4Ako
-----END CERTIFICATE-----
`)

func metronCrtBytes() ([]byte, error) {
	return _metronCrt, nil
}

func metronCrt() (*asset, error) {
	bytes, err := metronCrtBytes()
	if err != nil {
		return nil, err
	}

	info := bindataFileInfo{name: "metron.crt", size: 1497, mode: os.FileMode(292), modTime: time.Unix(1538067163, 0)}
	a := &asset{bytes: bytes, info: info}
	return a, nil
}

var _metronCsr = []byte(`-----BEGIN CERTIFICATE REQUEST-----
MIICVjCCAT4CAQAwETEPMA0GA1UEAxMGbWV0cm9uMIIBIjANBgkqhkiG9w0BAQEF
AAOCAQ8AMIIBCgKCAQEA0Btswf8lewiesgk+Wfzy6ELzd5+dsRsooidbTfQusfDf
a9wZiFDmsK4HePYO5/sx2TIzb1674wYuLFcrfK/PpYAsR23m7DmmH3jW+B2Yo9w6
rjtmBphbBdJJQcS3w7ZGvWN/uRsYvgqg0pN834ioc/Lo76eAU6nLWfrfq/Sf/pd9
8faA8DdUNpKAaHWgJBgEJCnOfVo1NAltfqwbA0SzCOP0oh2XmNqdnZlkqqCrZgAy
ZGJtoZIFyqlE+H2aPSJSXO6ete1mjM2Bt4aq6/O9XYRfaX24/VzW4W2TXA/JkBQn
2nYSS/7Mgjy0Oqn24oJh0Q/x2jAlTsrcOb4yQ9sIAwIDAQABoAAwDQYJKoZIhvcN
AQELBQADggEBAAXvdHOHDgNWL9YToo4lqPYq6wLLRLPwzjsmpkWLkd3zy1Qa3i7K
h5TT2yS4K50cz3XvdBPq1eA8s36QuMtySQPtI/rpemji5lLdf3+EWHCC8iaJas1V
PRSAVMjyWER3d25XOlhHyDMrNc3azuAPVHdxVxRB6oH4hwtJS4D/wH451AcUSR6O
XnGouu3MiJ0pFW2LmDtfgHCZvLxTkQ5f4HdpV0+15VMT05xuibbDTLvMrpxnqVMN
gwZ2UaRrzu0yVFpAROb2zpLCEO/2kVXK8Q0BZKG3VzW4iPLGnOBVsgKYh6m5RqE2
JfEW33ggEgeOMyoLSwqzUjFvFlbSYqR3wxE=
-----END CERTIFICATE REQUEST-----
`)

func metronCsrBytes() ([]byte, error) {
	return _metronCsr, nil
}

func metronCsr() (*asset, error) {
	bytes, err := metronCsrBytes()
	if err != nil {
		return nil, err
	}

	info := bindataFileInfo{name: "metron.csr", size: 887, mode: os.FileMode(292), modTime: time.Unix(1538067163, 0)}
	a := &asset{bytes: bytes, info: info}
	return a, nil
}

var _metronKey = []byte(`-----BEGIN RSA PRIVATE KEY-----
MIIEogIBAAKCAQEA0Btswf8lewiesgk+Wfzy6ELzd5+dsRsooidbTfQusfDfa9wZ
iFDmsK4HePYO5/sx2TIzb1674wYuLFcrfK/PpYAsR23m7DmmH3jW+B2Yo9w6rjtm
BphbBdJJQcS3w7ZGvWN/uRsYvgqg0pN834ioc/Lo76eAU6nLWfrfq/Sf/pd98faA
8DdUNpKAaHWgJBgEJCnOfVo1NAltfqwbA0SzCOP0oh2XmNqdnZlkqqCrZgAyZGJt
oZIFyqlE+H2aPSJSXO6ete1mjM2Bt4aq6/O9XYRfaX24/VzW4W2TXA/JkBQn2nYS
S/7Mgjy0Oqn24oJh0Q/x2jAlTsrcOb4yQ9sIAwIDAQABAoIBACi4tRdg7dydWzBL
TsAdFwsLzshhm2HEhrb0LJGcbmazU4SvlO9vpTR9WUj6HQCXzrFJeXcZenp6Ax76
D7BeVqtz4TY48y7WOQN/idETOYMW3QSq6tPvjCAffeY4sBzD1iPJDH0UKEtHmSCb
a5vyCcRmi94ZUKsOVpRM2uey/nu6nrnY9l7Sj7372xwlzS8JVJrIuDyjH91/ZMGa
mANv5mzk3zb7cD2U3PJ1PJWwz5zsl3oqbWTYCJQapJYy+Z91McMn1b3/EOGJJHnC
n4jaGUS6WOo3XM25TmOunbCjExJcI4uJniskHyBvCwCZi2ngk2WwuIPymPwNPomV
OHioJ8ECgYEA6xDDs7MD6b65rjnTwFNjCB0VADUagvXlr7E/DZCKfxhwDNw11wEw
+VdIktwZxZqBuIhFtHT+LP/cd3pIVfU4WJS0Y/x1FhKBTtiQ3vonRV4vDPlsHE4s
bmoVp6kTs2qwHxK1IImSbnckXS608BdqGI5BHGrBkqmHbIzx5R22fE8CgYEA4qQK
Et9wIXlfRF40c+u53M3NW/1IOu8aRiq0PyeClwSCWyjd3cwaLhwcdPZYKMEwdEuL
kHcMocXI9MM1HE6lHtNf5psH6FdIZ9VlZsjh/GmfJpa19qdmyKqB5QGzqwnHQAsL
VK3Gtm0wERrg0vtnjVP5MLDY1b8rltM1+2y3yA0CgYBOnGumQ/7SA9ua3XHoRrq+
suMcD6ZPF6b5i6AXjDgU6vpGArrqrVZQfJUjsAHaaKJrMP+Gqv151RNIzZc1T+3J
CeoN6hbKC+Q8lwZT23qYoze+8gbqrGYFguq9CDkzbkF6EsqKGBflY2jA1ObjyCDO
F3zE4RrdTl6gub4Hrlkh1wKBgGUMhoFLpg8GsnclGXXl0ASmrb0p/J5qJOjL+Xl/
ADadCBHk8qcFbVbJqdZsT3o8SIJRfHR43+Tw7lxS/McWOYC49bU3whrRb7L77i4Z
ushzv0XRRGgo0yb8/tVAIP9NaM0hH3gt0r9bh2bY+QyYkt7sZdpTvxnuFl005oin
PHmxAoGAcp66wlOVNvyF9vCw987aPc+byj+jygaSiCJok4B7JPdS2dpPiLpzL3vm
OKYMc3emDc0wPaq49h+W2SUlaoukQfu4U9fjxyCilqzrSSR0JlRgJllQzRnbvNQA
473EgeLa7B7Y2Ya9XR+m2+8vJ+UzR7Y1B38jN7qSoT7NJsCj4Uc=
-----END RSA PRIVATE KEY-----
`)

func metronKeyBytes() ([]byte, error) {
	return _metronKey, nil
}

func metronKey() (*asset, error) {
	bytes, err := metronKeyBytes()
	if err != nil {
		return nil, err
	}

	info := bindataFileInfo{name: "metron.key", size: 1675, mode: os.FileMode(288), modTime: time.Unix(1538067163, 0)}
	a := &asset{bytes: bytes, info: info}
	return a, nil
}

var _promScraperCrt = []byte(`-----BEGIN CERTIFICATE-----
MIIEKzCCAhOgAwIBAgIRAMf7kJPLUqHd+dd9x30jOk4wDQYJKoZIhvcNAQELBQAw
GDEWMBQGA1UEAxMNbG9nZ3JlZ2F0b3JDQTAeFw0xODA5MjcxNjUyNDRaFw00MzA5
MjcxNjUyNDBaMBcxFTATBgNVBAMTDHByb20tc2NyYXBlcjCCASIwDQYJKoZIhvcN
AQEBBQADggEPADCCAQoCggEBAKtJy3av4ZXVuhY2rMvHjJwyZuIK8ReiSz4FgCDj
bZOQI7YabD7KTr3ha1YWNlHCuY9TGXoiXgI1dYpNjDyBrcIXKCZUTW/9tq5VZMvW
76Wq+dhINgixuLktkT10ylcHaxxvIQy7xyrfUh8tjZqNjVDsaiCiKpoRoFt2HyHd
DopKbAMgMQ5t8L6DdrLxyGXgQwtETCGS1Aeqm+4HORGA+H+iPVBK1e2lZheHeKSr
Uzw5/gRhjKGNQQBmgL9Y9VOLI1oKHF+Dv8a7dCcgQp2PCG2C8ySt95EKAlTqq6fK
DolUGAWmOn4c+2iKWhLpzzj3p9U5mTL9c7kBKqIKJ5XSTkUCAwEAAaNxMG8wDgYD
VR0PAQH/BAQDAgO4MB0GA1UdJQQWMBQGCCsGAQUFBwMBBggrBgEFBQcDAjAdBgNV
HQ4EFgQUm2WRuIaFK1PQZRbKH2Kg1uMgHFAwHwYDVR0jBBgwFoAUYFk2zSKZ53lA
EIe+I7Jw/7a32dIwDQYJKoZIhvcNAQELBQADggIBAEo6Bn0r0xSgIRmh5cx6ILSe
/opndsARZ6BckIcxZjnq2PBV+h3GM4Vp43rP7kPo6qOZSgRzb07nxkdpHZhTrZEu
QMFIa9ieTWdGGpTEog6fed9HRffblByxVOpHIs62okio1mpK757SC0ayYESSEb27
zhRvzm5PdiH7D4X+rRm27DVQQtEQrE9XySBUbPKxBn90O8KuI4xmiElYO4uCaACf
oKsZuur318X5e0uocYn9hg9TH4lLcvveBMUpGtX4X0Xe3KpuXSMlPS76w6KZlsVC
5Tbq/w5mr1vfpuvgky/tOly0NBVWDXF6QH1phAwcU/2VVcFAupZRbne4pj6KxN+d
lUZCGZ9Tk6HF4RSFaL1QrujDirwDwG6NCv5xdtpYzCtO05+mlZANDKWnYIF2uPH4
cR6vi65TQpe3ACEXY8jehoyRk9RQdRSfMhFfgFQPCgGai+2D/DEoqt0x4koy756b
Om+HkwouHzQcpRN7oJE4bXDCFyj0GMKrNfGy/dfdNLl/nbkasXSG4s13r4WND4Mf
E8RzvP14byeUJ2jpPUjCQBmMcu6aLtpwheBwlC2ySmIaTllQFehHU8f2cBxKrL2r
Pxi5Z3U2lJK5ROZElyh4DlOLiXdOHvfv7Niqe/QQz3kqphA/rTPy0fhPWvQMyzsq
rgvz8SP3bbghrFMK5vdR
-----END CERTIFICATE-----
`)

func promScraperCrtBytes() ([]byte, error) {
	return _promScraperCrt, nil
}

func promScraperCrt() (*asset, error) {
	bytes, err := promScraperCrtBytes()
	if err != nil {
		return nil, err
	}

	info := bindataFileInfo{name: "prom-scraper.crt", size: 1505, mode: os.FileMode(292), modTime: time.Unix(1538067164, 0)}
	a := &asset{bytes: bytes, info: info}
	return a, nil
}

var _promScraperCsr = []byte(`-----BEGIN CERTIFICATE REQUEST-----
MIICXDCCAUQCAQAwFzEVMBMGA1UEAxMMcHJvbS1zY3JhcGVyMIIBIjANBgkqhkiG
9w0BAQEFAAOCAQ8AMIIBCgKCAQEAq0nLdq/hldW6Fjasy8eMnDJm4grxF6JLPgWA
IONtk5AjthpsPspOveFrVhY2UcK5j1MZeiJeAjV1ik2MPIGtwhcoJlRNb/22rlVk
y9bvpar52Eg2CLG4uS2RPXTKVwdrHG8hDLvHKt9SHy2Nmo2NUOxqIKIqmhGgW3Yf
Id0OikpsAyAxDm3wvoN2svHIZeBDC0RMIZLUB6qb7gc5EYD4f6I9UErV7aVmF4d4
pKtTPDn+BGGMoY1BAGaAv1j1U4sjWgocX4O/xrt0JyBCnY8IbYLzJK33kQoCVOqr
p8oOiVQYBaY6fhz7aIpaEunPOPen1TmZMv1zuQEqogonldJORQIDAQABoAAwDQYJ
KoZIhvcNAQELBQADggEBACdwN3l91Yq12jZ6vARZFj5Ufj2H0nJLbngMFdco44Ep
TodgqvMyBelZZrW7H+2HAdQdqGzNuHDg0B/No+Re54KgeAwfoNK5GwuRsOqtz9ac
4TUeY3xP/DUgROzSR6kWztxcupbaRHj3l3CufkFc8bvmM37C6YJx4p/ZuOTDWSmL
3YY7JkHfVURZ/3s1iQA+HHAnbf0NTG2t9XBtsG2JBMAKQCPxKcsd9h2CapmKLgmp
Vosn/gI+NYyNn5zU4AyRLO7S1HGkeXFJzQFashvQAA2F8xrFXcN6g9Ce8enVK9cB
6QcfEuCvm9fekYBNeNB0XFEVjxIl6G4wF6kZVwnk0BI=
-----END CERTIFICATE REQUEST-----
`)

func promScraperCsrBytes() ([]byte, error) {
	return _promScraperCsr, nil
}

func promScraperCsr() (*asset, error) {
	bytes, err := promScraperCsrBytes()
	if err != nil {
		return nil, err
	}

	info := bindataFileInfo{name: "prom-scraper.csr", size: 895, mode: os.FileMode(292), modTime: time.Unix(1538067164, 0)}
	a := &asset{bytes: bytes, info: info}
	return a, nil
}

var _promScraperKey = []byte(`-----BEGIN RSA PRIVATE KEY-----
MIIEowIBAAKCAQEAq0nLdq/hldW6Fjasy8eMnDJm4grxF6JLPgWAIONtk5Ajthps
PspOveFrVhY2UcK5j1MZeiJeAjV1ik2MPIGtwhcoJlRNb/22rlVky9bvpar52Eg2
CLG4uS2RPXTKVwdrHG8hDLvHKt9SHy2Nmo2NUOxqIKIqmhGgW3YfId0OikpsAyAx
Dm3wvoN2svHIZeBDC0RMIZLUB6qb7gc5EYD4f6I9UErV7aVmF4d4pKtTPDn+BGGM
oY1BAGaAv1j1U4sjWgocX4O/xrt0JyBCnY8IbYLzJK33kQoCVOqrp8oOiVQYBaY6
fhz7aIpaEunPOPen1TmZMv1zuQEqogonldJORQIDAQABAoIBAA8ao8FkgvzmatFY
ouYZQ5Hmc+IM2vOdkQr4CzNbOqdfd3awX8ktp8HgpclijgmppRk5V67IZwfE1QeM
DQis2riZuCWhG277rWc0Cn5bBqjSKdPjkjg0C7jwhrUnnkwMUGqidgScblSeeqxb
JPhy8Poozrbv9de+JCjMgrRGvOh+wJca+PX/0xAnfd4ezFaFkgY5wkq+QYn1xl8q
d45uVATc2H7E0XBtn6pqxuyH67T2de0Y0FoCB7/K+lHQbflKZtRlEco3VfIcgASf
mlNrSQPYPZopxvWf9NqHPCbydyEwBqTn91ABso/UykPfPWVshUjE2jfvfimrCULj
HFkx/AECgYEA0sGqmoyiQ8ZooKq9HYnLYMZmNNQsLbRnMbWeJKPrqpW6S0JoHLI5
RtrC1pPx5a4V4WOym9VAHiW8DOxG4UTFvkXVsSacul4um+Xko9jr79+iM+untr1X
pdAQdHvsZLa1WXLGpuNmvQgGk7BjGGqJoJU1szrrANw7Y4lBEItNFQECgYEA0A8c
i5xiVNxZeRErNinq9BYCb+BydwFMK9nXN70D5bcwwZCNQ0yQIeS6S+Q2HgAoUzkJ
bBaSm08jYcKO9vdSFLsUvMNI6cpuAePHvO8uQxMpBaOiOOE2ILHbBuwjNVVhwMqp
hd+BuZdt188fk2HyZ5YJWPoUCgBKf6WjP7GCpUUCgYAYkNho8VGMotjZOW2XvtME
8btCFyUbIrcQlUHctXqnxJIVaaUnCyMf/inNxyrgAb2tKujLvzydBvr3aqcMZO7D
sfIplv2Xv5ihNVfEPWmq6R9H/ATtiP5pZmo0malBSAa1aWp8U29LQ1844ct7Mhfe
ruW2gXyY+hK2FG6QFhyjAQKBgQDNOVqqy0Ki+ga3SJwa/RXoVZ1pxTai9ACycFm9
fQ/PEvdgtrjgXTD+faLVIPHQfc9I58XHfCx4TYNU9pgWOrYYBMDbwLS3Bxmje46V
akdzmf6otVNaT6sYbNbi6SGBhgq6JC07A8/txNRwPrmiosZ8Lp5hyarigo75geSY
+vsnEQKBgF8n5S2UrLxi/AE5lMXAqa1TmA2PmKNCwR4ZxoMVcI384XpOQtJ7zNAf
7SbCT5m592fzvingBEIRfn7lFLp7200q3pblQzEjjX/Pn85qEhzr2kd1bHbR8kA3
g3fHPEWDHCU0rW/JoVclLarNjTBUMUelPR3e9Vt0SN5AmloEAY4v
-----END RSA PRIVATE KEY-----
`)

func promScraperKeyBytes() ([]byte, error) {
	return _promScraperKey, nil
}

func promScraperKey() (*asset, error) {
	bytes, err := promScraperKeyBytes()
	if err != nil {
		return nil, err
	}

	info := bindataFileInfo{name: "prom-scraper.key", size: 1675, mode: os.FileMode(288), modTime: time.Unix(1538067164, 0)}
	a := &asset{bytes: bytes, info: info}
	return a, nil
}

var _routerCrt = []byte(`-----BEGIN CERTIFICATE-----
MIIEJTCCAg2gAwIBAgIRAI8mWfhMy6gn6XJqv0jujiEwDQYJKoZIhvcNAQELBQAw
GDEWMBQGA1UEAxMNbG9nZ3JlZ2F0b3JDQTAeFw0xODA5MjcxNjUyNDNaFw00MzA5
MjcxNjUyNDBaMBExDzANBgNVBAMTBnJvdXRlcjCCASIwDQYJKoZIhvcNAQEBBQAD
ggEPADCCAQoCggEBALa3kgGVlEtGxZwfDsO7KhMG4Olmf2D8uQbd1n7C1/wwk8go
1FrK9oPkpxADGBlvErl8+qFCwRRqWrcnbDeHVoT3EoW9tS+i7u6KRglG/MoZRQ2v
9seCU/2r/7OfSYtHfHn8UtPvS/nAoJEZNhqfOd3uskN4zB/O2xmJ5G61XNssDxSx
gl0gLv5WJNdtI1sUjQ67bGgYsD6XFCdNSA8i5wPSvR7wus0HwFr+D0cCY0I0q/Os
faBimI02jULriKINoEQFuVpyIjS4l9Ny0WWcPZh0UVMduMDLBET1ceXDrBeE6Qrc
iW8f1V2nd1xLVs2kdTez/Smgh6QdCMbJxzTKAhsCAwEAAaNxMG8wDgYDVR0PAQH/
BAQDAgO4MB0GA1UdJQQWMBQGCCsGAQUFBwMBBggrBgEFBQcDAjAdBgNVHQ4EFgQU
hI1mGhvjcrXdYCk1cdUxJOV+a3swHwYDVR0jBBgwFoAUYFk2zSKZ53lAEIe+I7Jw
/7a32dIwDQYJKoZIhvcNAQELBQADggIBAEcPd5U9b8OC9X5O9s4Z9qpt14mEOoqG
7qDsslbA17IuThHDG3XQDRSXjuKrabRnUoFEdPh+8KmveipDCGYMDubTC7CQF4qP
NqqR2CY5zw/1ITgi/JYnruMCBT0I1K1dAxSKw2tsbCfXG9lHgwJvwR+fswRJeYz2
qvXWZs8g1lZPe8i9B7J7fLo0n1cJIZrtZayxtn5SugJSr9n+Ej94R0l0LA5+inUM
43ZoizBsb+gq9IzzwjkK28QNgCN8B34ZiaC5ZoMzdVsSCi3IdSVSM+uJYIlnMMEC
cQD8TQzHlM2tmFoT7x6wuF4hc2R44L12/WhM5lcIeRM1FZ/HpEWq+EFh9PU9Bk62
6EDbBVa5A5Rj4In/NNK8d3d1b/3+TD9dtJcY94qYlqXztljxsUGYhRO4RfNpuMBH
5IGknJlNq76b/0q/rmprOOadoBU2Z+0OwCMzImOW3E8G7ZuMhz8Vo0G+UCW7+Etv
OGJMT+aaL0ejoz7jzq5UXxdOO0Z2u1TmslJnVm3SUznFdkvM8uSeQh74HY6zVvLV
UiYPuI60YlgSxsUoJ9bzWTdFJuIvss60VG2PVHSc8XffdfEY3cdUJa8K70AvZjH4
v/851lohYRyw2Z03CkgZ79Zzviwbzv1AcR2CKIFWoKPpVOVnc2X/fQrWMWp8zFxm
LSc7dTbjC0oa
-----END CERTIFICATE-----
`)

func routerCrtBytes() ([]byte, error) {
	return _routerCrt, nil
}

func routerCrt() (*asset, error) {
	bytes, err := routerCrtBytes()
	if err != nil {
		return nil, err
	}

	info := bindataFileInfo{name: "router.crt", size: 1497, mode: os.FileMode(292), modTime: time.Unix(1538067164, 0)}
	a := &asset{bytes: bytes, info: info}
	return a, nil
}

var _routerCsr = []byte(`-----BEGIN CERTIFICATE REQUEST-----
MIICVjCCAT4CAQAwETEPMA0GA1UEAxMGcm91dGVyMIIBIjANBgkqhkiG9w0BAQEF
AAOCAQ8AMIIBCgKCAQEAtreSAZWUS0bFnB8Ow7sqEwbg6WZ/YPy5Bt3WfsLX/DCT
yCjUWsr2g+SnEAMYGW8SuXz6oULBFGpatydsN4dWhPcShb21L6Lu7opGCUb8yhlF
Da/2x4JT/av/s59Ji0d8efxS0+9L+cCgkRk2Gp853e6yQ3jMH87bGYnkbrVc2ywP
FLGCXSAu/lYk120jWxSNDrtsaBiwPpcUJ01IDyLnA9K9HvC6zQfAWv4PRwJjQjSr
86x9oGKYjTaNQuuIog2gRAW5WnIiNLiX03LRZZw9mHRRUx24wMsERPVx5cOsF4Tp
CtyJbx/VXad3XEtWzaR1N7P9KaCHpB0IxsnHNMoCGwIDAQABoAAwDQYJKoZIhvcN
AQELBQADggEBAIWSRXSGV5MEHb54d63XCyMbCYT4rSqfNadRjefV+PZXorCZzEz/
ZHsFoJzXQST+veYbb/2gtpsSxFbvJZLnK2MJIp21DxouOTYH6nN1/xfGgoGI4C1h
1h9h2Cy2519NvxTUJQJgw7bVBhxtkBx/+m5I1v/b6li/PJH6pWWSVYk45nYR4Fjd
IbR416kRyacTs+ojmxtv4Z6fOGEeD2ltaC9MT3LfzuUWwR7Z2uVRoTl7JRePbeGK
CqOIMDWpmUv4Mng3LZSVYZbuwRutRizQ4yMGqiRFtX01eIh1tDntmphzQbaBCgfZ
Ar1H1qsInaoL39q1sAxVStTnmyI09a054tI=
-----END CERTIFICATE REQUEST-----
`)

func routerCsrBytes() ([]byte, error) {
	return _routerCsr, nil
}

func routerCsr() (*asset, error) {
	bytes, err := routerCsrBytes()
	if err != nil {
		return nil, err
	}

	info := bindataFileInfo{name: "router.csr", size: 887, mode: os.FileMode(292), modTime: time.Unix(1538067163, 0)}
	a := &asset{bytes: bytes, info: info}
	return a, nil
}

var _routerKey = []byte(`-----BEGIN RSA PRIVATE KEY-----
MIIEpQIBAAKCAQEAtreSAZWUS0bFnB8Ow7sqEwbg6WZ/YPy5Bt3WfsLX/DCTyCjU
Wsr2g+SnEAMYGW8SuXz6oULBFGpatydsN4dWhPcShb21L6Lu7opGCUb8yhlFDa/2
x4JT/av/s59Ji0d8efxS0+9L+cCgkRk2Gp853e6yQ3jMH87bGYnkbrVc2ywPFLGC
XSAu/lYk120jWxSNDrtsaBiwPpcUJ01IDyLnA9K9HvC6zQfAWv4PRwJjQjSr86x9
oGKYjTaNQuuIog2gRAW5WnIiNLiX03LRZZw9mHRRUx24wMsERPVx5cOsF4TpCtyJ
bx/VXad3XEtWzaR1N7P9KaCHpB0IxsnHNMoCGwIDAQABAoIBACEErULSB/lOcblT
t3RRZzoG/S/QUOZy5PDDt9YyWZt+H8aE8lLx6HhPIo13Mayu8MBKQHRRvth0m64L
Vrf2IgFnMJawgIR6OhkrLZrRlC7lQCBIEx1chNcLdOq9tymPIoRcv48C6ETatWlj
F+7ZpThgwSAGPUTmOZu02m3TIlOMpYZLtwK+c8hGcx45uu40XJPHL4K/4c+vh1Mn
PJepuOS0F6GoZ1vvIhZVfs9vLL8+rMQgpjhZb41B4DJKNKFLSnn+ho9Jt/5i02hn
YLxqwpfAHKgiJAXUZYLVAUX+5Y7+0JPUmUPa5oKBGhbj3xupY+bjX/gCVXrrA/+U
oLXZGtECgYEA2Nc6SHA7Pt/rOSIuCTp+0Sh2ddgTTrBTKklPIOmgR0lDfaU3crVM
AeKiP4pdVZTzCJVpx106XCgtFjj/JuAEiOiPV63oXvkHKzjg+HkHou+SO2VUYLfP
8TBl1y4GtzDP9uVF0yBbDql6jG4A34EUdwq3TsTjgcL8Z2nxfmCz4DkCgYEA17bF
NfAl+DWKuy/QNTa2qPt63hgxuawnL3pfmp9EZpEDfgm60OTcJWrxrE8+6cjwA+6K
FLmT7f/iwyVH3PWMag3yZysjS8e0aWZOd4EuRenTDbsk7ZkLFbDgtLNIEPCOQyDq
c3X0hLNy62gTu+WuMzc6I5aDiPnS8ZbDOVzVjPMCgYEAkKfEMd7tJxyqBwtOOsnT
ICUmIadr+eqXEHanWwV/7w5o/8DgJJ3dfsR6CHl9mkIrf2ZtkpoW/LOwoEqVrJF1
dP/v4EYb5n+q0KK5MglLlt7LZuRKTdtR1Uy8I7iIslzV35dD5XyIQle9cUFRQ8kQ
pfl4IAwo2cACMdrzR6OrW8ECgYEAsLrINdmrcgCDybpxjbdmzWlDj8QosSLu88IB
o8+KnbF/N/rGuLBYALvuhipis+zxX3dGX5ZvMRVs9k6L4ua2BImqqIW6JDLYh2XP
Ma9/dr4MMPq7VYIGh93jK4iaqW48T5kfHDtuem3+4Ajj6hRRtRoxIskEuOtcvJu1
FEEPoKsCgYEAmD3Us+gqUKwPVjnUtY8lcIRUZ3KSOnTJhXkKOTkx8YuSjeLZQebr
M8xwLYa/mCv+BJklD7LkteaOKMzH2ALg1hLxGU1AL4NmQlmGHMPNaBJrLdTHqop+
nxPIOS3cPW/ZG4nbxNCesQTM152cj1q5kkesBayFOIpmkLpmWMkWWpk=
-----END RSA PRIVATE KEY-----
`)

func routerKeyBytes() ([]byte, error) {
	return _routerKey, nil
}

func routerKey() (*asset, error) {
	bytes, err := routerKeyBytes()
	if err != nil {
		return nil, err
	}

	info := bindataFileInfo{name: "router.key", size: 1679, mode: os.FileMode(288), modTime: time.Unix(1538067163, 0)}
	a := &asset{bytes: bytes, info: info}
	return a, nil
}

// Asset loads and returns the asset for the given name.
// It returns an error if the asset could not be found or
// could not be loaded.
func Asset(name string) ([]byte, error) {
	cannonicalName := strings.Replace(name, "\\", "/", -1)
	if f, ok := _bindata[cannonicalName]; ok {
		a, err := f()
		if err != nil {
			return nil, fmt.Errorf("Asset %s can't read by error: %v", name, err)
		}
		return a.bytes, nil
	}
	return nil, fmt.Errorf("Asset %s not found", name)
}

// MustAsset is like Asset but panics when Asset would return an error.
// It simplifies safe initialization of global variables.
func MustAsset(name string) []byte {
	a, err := Asset(name)
	if err != nil {
		panic("asset: Asset(" + name + "): " + err.Error())
	}

	return a
}

// AssetInfo loads and returns the asset info for the given name.
// It returns an error if the asset could not be found or
// could not be loaded.
func AssetInfo(name string) (os.FileInfo, error) {
	cannonicalName := strings.Replace(name, "\\", "/", -1)
	if f, ok := _bindata[cannonicalName]; ok {
		a, err := f()
		if err != nil {
			return nil, fmt.Errorf("AssetInfo %s can't read by error: %v", name, err)
		}
		return a.info, nil
	}
	return nil, fmt.Errorf("AssetInfo %s not found", name)
}

// AssetNames returns the names of the assets.
func AssetNames() []string {
	names := make([]string, 0, len(_bindata))
	for name := range _bindata {
		names = append(names, name)
	}
	return names
}

// _bindata is a table, holding each asset generator, mapped to its name.
var _bindata = map[string]func() (*asset, error){
	"doppler.crt":        dopplerCrt,
	"doppler.csr":        dopplerCsr,
	"doppler.key":        dopplerKey,
	"loggregator-ca.crl": loggregatorCaCrl,
	"loggregator-ca.crt": loggregatorCaCrt,
	"loggregator-ca.key": loggregatorCaKey,
	"metron.crt":         metronCrt,
	"metron.csr":         metronCsr,
	"metron.key":         metronKey,
	"prom-scraper.crt":   promScraperCrt,
	"prom-scraper.csr":   promScraperCsr,
	"prom-scraper.key":   promScraperKey,
	"router.crt":         routerCrt,
	"router.csr":         routerCsr,
	"router.key":         routerKey,
}

// AssetDir returns the file names below a certain
// directory embedded in the file by go-bindata.
// For example if you run go-bindata on data/... and data contains the
// following hierarchy:
//     data/
//       foo.txt
//       img/
//         a.png
//         b.png
// then AssetDir("data") would return []string{"foo.txt", "img"}
// AssetDir("data/img") would return []string{"a.png", "b.png"}
// AssetDir("foo.txt") and AssetDir("notexist") would return an error
// AssetDir("") will return []string{"data"}.
func AssetDir(name string) ([]string, error) {
	node := _bintree
	if len(name) != 0 {
		cannonicalName := strings.Replace(name, "\\", "/", -1)
		pathList := strings.Split(cannonicalName, "/")
		for _, p := range pathList {
			node = node.Children[p]
			if node == nil {
				return nil, fmt.Errorf("Asset %s not found", name)
			}
		}
	}
	if node.Func != nil {
		return nil, fmt.Errorf("Asset %s not found", name)
	}
	rv := make([]string, 0, len(node.Children))
	for childName := range node.Children {
		rv = append(rv, childName)
	}
	return rv, nil
}

type bintree struct {
	Func     func() (*asset, error)
	Children map[string]*bintree
}

var _bintree = &bintree{nil, map[string]*bintree{
	"doppler.crt":        {dopplerCrt, map[string]*bintree{}},
	"doppler.csr":        {dopplerCsr, map[string]*bintree{}},
	"doppler.key":        {dopplerKey, map[string]*bintree{}},
	"loggregator-ca.crl": {loggregatorCaCrl, map[string]*bintree{}},
	"loggregator-ca.crt": {loggregatorCaCrt, map[string]*bintree{}},
	"loggregator-ca.key": {loggregatorCaKey, map[string]*bintree{}},
	"metron.crt":         {metronCrt, map[string]*bintree{}},
	"metron.csr":         {metronCsr, map[string]*bintree{}},
	"metron.key":         {metronKey, map[string]*bintree{}},
	"prom-scraper.crt":   {promScraperCrt, map[string]*bintree{}},
	"prom-scraper.csr":   {promScraperCsr, map[string]*bintree{}},
	"prom-scraper.key":   {promScraperKey, map[string]*bintree{}},
	"router.crt":         {routerCrt, map[string]*bintree{}},
	"router.csr":         {routerCsr, map[string]*bintree{}},
	"router.key":         {routerKey, map[string]*bintree{}},
}}

// RestoreAsset restores an asset under the given directory
func RestoreAsset(dir, name string) error {
	data, err := Asset(name)
	if err != nil {
		return err
	}
	info, err := AssetInfo(name)
	if err != nil {
		return err
	}
	err = os.MkdirAll(_filePath(dir, filepath.Dir(name)), os.FileMode(0755))
	if err != nil {
		return err
	}
	err = ioutil.WriteFile(_filePath(dir, name), data, info.Mode())
	if err != nil {
		return err
	}
	err = os.Chtimes(_filePath(dir, name), info.ModTime(), info.ModTime())
	if err != nil {
		return err
	}
	return nil
}

// RestoreAssets restores an asset under the given directory recursively
func RestoreAssets(dir, name string) error {
	children, err := AssetDir(name)
	// File
	if err != nil {
		return RestoreAsset(dir, name)
	}
	// Dir
	for _, child := range children {
		err = RestoreAssets(dir, filepath.Join(name, child))
		if err != nil {
			return err
		}
	}
	return nil
}

func _filePath(dir, name string) string {
	cannonicalName := strings.Replace(name, "\\", "/", -1)
	return filepath.Join(append([]string{dir}, strings.Split(cannonicalName, "/")...)...)
}
