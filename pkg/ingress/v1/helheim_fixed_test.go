// This file was generated by github.com/nelsam/hel.  Do not
// edit this code by hand unless you *really* know what you're
// doing.  Expect any changes made manually to be overwritten
// the next time hel regenerates this file.

package v1_test

import (
	"sync"

	"github.com/cloudfoundry/sonde-go/events"
)

type mockConn struct {
	WriteCalled chan bool
	WriteInput  struct {
		Data chan []byte
	}
	WriteOutput struct {
		Ret0 chan error
	}
}

func (m *mockConn) Write(data []byte) error {
	m.WriteCalled <- true
	m.WriteInput.Data <- data
	return <-m.WriteOutput.Ret0
}

type mockDroppedMessageCounter struct {
	DropCalled chan bool
	DropInput  struct {
		Count chan uint32
	}
}

func (m *mockDroppedMessageCounter) Drop(count uint32) {
	m.DropCalled <- true
	m.DropInput.Count <- count
}

type MockEnvelopeWriter struct {
	Events     []*events.Envelope
	eventsLock sync.Mutex
}

func (m *MockEnvelopeWriter) Write(event *events.Envelope) {
	m.eventsLock.Lock()
	defer m.eventsLock.Unlock()
	m.Events = append(m.Events, event)
}
